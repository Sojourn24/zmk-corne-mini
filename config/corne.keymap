#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3

//testing mouse movement and scroll binds...

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <37 16>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <15 21>;
        };

        perc {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <28 16>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        pound {
            bindings = <&kp POUND>;
            key-positions = <3 15>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <2 14>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <26 14>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <28 27>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <28 29>;
        };

        star {
            bindings = <&kp STAR>;
            key-positions = <8 20>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <32 20>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <7 19>;
        };

        minus {
            bindings = <&kp KP_MINUS>;
            key-positions = <31 19>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <30 18>;
        };

        leftbrack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        rightbrack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 32>;
        };

        para-less {
            bindings = <&paraless>;
            key-positions = <20 19>;
        };

        para-great {
            bindings = <&paragreat>;
            key-positions = <20 21>;
        };

        Apostrohe {
            bindings = <&kp LS(SQT)>;
            key-positions = <21 22>;
        };

        double_q {
            bindings = <&kp APOSTROPHE>;
            key-positions = <34 33>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        Main {
            display-name = "Main";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&none  &kp Q       &kp W           &kp E               &kp R             &kp T              &kp Y          &kp U              &kp I                &kp O            &kp P          &none
&none  &hm LGUI A  &hm LEFT_ALT S  &hm LEFT_CONTROL D  &hm LEFT_SHIFT F  &kp G              &kp H          &hm RIGHT_SHIFT J  &hm RIGHT_CONTROL K  &hm RIGHT_ALT L  &hm RGUI SEMI  &none
&none  &kp Z       &kp X           &kp C               &kp V             &kp B              &kp N          &kp M              &kp COMMA            &kp DOT          &kp ENTER      &none
                                   &lt 4 TAB           &lt 1 SPACE       &lt 3 BACKSPACE    &kp BACKSPACE  &lt 2 SPACE        &lt 5 SLASH
            >;
        };

        Numpad {
            display-name = "Numpad";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&none  &kp N1  &kp N2  &kp N3     &kp N4     &kp N5      &kp N6      &kp N7  &kp N8  &kp N9  &kp N0  &none
&none  &kp N6  &kp N7  &kp N8     &kp N9     &kp N0      &kp N0      &kp N4  &kp N5  &kp N6  &trans  &none
&none  &trans  &trans  &kp EQUAL  &kp MINUS  &kp PLUS    &kp PERIOD  &kp N1  &kp N2  &kp N3  &trans  &trans
                       &none      &none      &none       &trans      &trans  &trans
            >;
        };

        Symbols {
            display-name = "Symbols";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR            &kp PRCNT    &kp CARET  &kp AMPS         &kp ASTRK      &kp LEFT_PARENTHESIS  &kp RPAR       &trans
&trans  &trans    &trans  &trans    &hm LEFT_SHIFT SQT  &kp GRAVE    &kp MINUS  &hm RCTRL EQUAL  &hm RALT LBKT  &hm RSHFT RBKT        &hm RGUI BSLH  &trans
&trans  &trans    &trans  &trans    &trans              &kp TILDE    &kp UNDER  &kp PLUS         &kp LBRC       &kp RBRC              &kp PIPE       &trans
                          &none     &none               &none        &trans     &trans           &trans
            >;
        };

        Bluetooth {
            display-name = "bt";
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &bt BT_CLR      &trans  &trans  &trans  &trans       &trans
&trans  &trans        &trans        &trans        &trans        &studio_unlock    &bt BT_CLR_ALL  &trans  &trans  &trans  &trans       &trans
&trans  &bootloader   &trans        &trans        &trans        &trans            &trans          &trans  &trans  &trans  &bootloader  &trans
                                    &none         &none         &none             &none           &none   &trans
            >;
        };

        Shortcuts {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &none
                       &none   &none   &none     &trans  &trans  &trans
            >;

            label = "CMDS";
        };

        ALT {
            bindings = <
&none  &none  &none  &none        &none          &none      &none  &none  &none  &none  &none          &none
&none  &none  &none  &none        &none          &none      &none  &none  &none  &none  &none          &none
&none  &none  &none  &none        &none          &none      &none  &none  &none  &none  &kp LS(ENTER)  &none
                     &kp LS(TAB)  &kp LG(SPACE)  &kp DEL    &none  &none  &none
            >;
        };

        Gaming {
            bindings = <
&kp ESCAPE      &trans  &trans  &trans        &trans     &trans              &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB         &kp A   &kp S   &kp D         &kp F      &trans              &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &trans  &trans  &trans        &trans     &trans              &trans  &trans  &trans  &trans  &trans  &trans
                                &kp LEFT_ALT  &kp SPACE  &kp LEFT_CONTROL    &trans  &trans  &trans
            >;

            label = "Game";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
